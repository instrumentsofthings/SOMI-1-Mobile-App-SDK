#N canvas 152 258 700 476 12;
#X obj 89 395 dac~;
#N canvas 487 142 806 249 noise 0;
#X obj 43 78 noise~;
#X obj 58 156 *~ 1;
#X obj 101 35 r noiseCutoff;
#X obj 58 180 outlet~;
#X obj 101 59 * 8000;
#X floatatom 181 87 5 0 0 0 - - - 0;
#X obj 181 130 r noiseLevel;
#X obj 181 63 r noiseReso;
#X obj 57 109 svf~ 1000 0.3;
#X text 274 129 You can use 'r' or 'receive' for your inputs \;;
#X text 232 11 Do not forget to scale incoming values as you will always receive normalized values from 0 to 1 \;;
#X connect 0 0 8 0;
#X connect 1 0 3 0;
#X connect 2 0 4 0;
#X connect 4 0 8 1;
#X connect 5 0 8 2;
#X connect 6 0 1 1;
#X connect 7 0 5 0;
#X connect 8 0 1 0;
#X restore 209 179 pd noise;
#X obj 90 170 osc~;
#X text 206 144 ..or encapsulate the sounds and receive messages in subpatches \;;
#X obj 90 122 notein 1;
#X obj 90 146 mtof;
#X obj 271 395 testing;
#X text 89 31 SOMI-1 DEMO PATCH \; Instruments Of Things \, 2023 \; required externals: cyclone \;;
#X obj 90 367 *~ 0.33;
#X text 89 96 Create your soundscapes in top-level.. \;;
#X text 241 243 Of course you can use abstractions too \;;
#X text 271 377 Use ctlins for testing patches with SOMI-1 in Pd \;;
#X obj 241 261 sampler;
#X connect 1 0 8 0;
#X connect 2 0 8 0;
#X connect 4 0 5 0;
#X connect 5 0 2 0;
#X connect 8 0 0 0;
#X connect 8 0 0 1;
#X connect 12 0 8 0;
